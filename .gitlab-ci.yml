stages:
    - build
    - test
    - coverage

variables:
    GIT_SUBMODULE_STRATEGY: recursive

before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update -qq && apt-get upgrade -y
    - apt-get install -y apt-transport-https ca-certificates gnupg software-properties-common wget
    - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
    - apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
    - apt-get update -qq
    - apt-get install -y gcc g++ cmake make build-essential file git gcovr
    - apt-get install -y libgtest-dev
    - apt-get install -y libopencv-dev libhdf5-dev libnifti-dev
    - cd /usr/src/gtest
    - cmake CMakeLists.txt
    - make
    - cp ./lib/libgtest*.a /usr/lib
    - cd -


build:
    stage: build
    image: nvidia/cuda:11.2.0-devel-ubuntu20.04
    script:
        - mkdir build/
        - cd build/
        - cmake ..
        - make -j4
    tags:
        - docker
        - gpu
    artifacts:
        paths:
            - build/
        expire_in: 20 minutes


test:
    stage: test
    image: nvidia/cuda:11.2.0-devel-ubuntu20.04
    script:
        - cd build/
        - make test
    tags:
        - docker
        - gpu
    dependencies:
        - build
    artifacts:
        paths:
            - build/
        expire_in: 20 minutes



coverage:
    stage: coverage
    # Docker image which will be used for this repository
    image: nvidia/cuda:11.2.0-devel-ubuntu20.04
    script:
        - cd build/
        - make coverage
    tags:
        - docker
        - gpu
    dependencies:
        - test
    artifacts:
        paths:
            - build/coverage


