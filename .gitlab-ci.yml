stages:
    - build
    - test
    - coverage

variables:
  APT_CACHE_DIR: $CI_PROJECT_DIR/apt


cache:
    paths:
      - apt/


before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update -qq && apt-get upgrade -y
    - apt-get install -y -o dir::cache::archives="$APT_CACHE_DIR" gcc g++ cmake make build-essential file
    - apt-get install -y -o dir::cache::archives="$APT_CACHE_DIR" libhdf5-dev
    - apt-get install -y -o dir::cache::archives="$APT_CACHE_DIR" libopencv-dev
    - apt-get install -y -o dir::cache::archives="$APT_CACHE_DIR" git
    - apt-get install -y -o dir::cache::archives="$APT_CACHE_DIR" nvidia-cuda-toolkit
    - git submodule update --init --recursive


build:
    stage: build
    image: nvidia/cuda:latest
    script:
        - mkdir build/
        - cd build/
        - cmake ..
        - make -j4
    tags:
        - docker
        - gpu
    artifacts:
        paths:
            - build/
        expire_in: 20 minutes


test:
    stage: test
    image: nvidia/cuda:latest
    script:
        - cd build/
        - make test
    tags:
        - docker
        - gpu
    dependencies:
        - build
    artifacts:
        paths:
            - build/
        expire_in: 20 minutes



coverage:
    stage: coverage
    # Docker image which will be used for this repository
    image: nvidia/cuda:latest
    script:
        - cd build/
        - make coverage
    tags:
        - docker
        - gpu
    dependencies:
        - test
    artifacts:
        paths:
            - build/coverage


